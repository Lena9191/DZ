<?php
/*1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.
*/
$str = 'Hello,world!';
echo strtoupper($str);
echo '<br>' . '<br>' . '<br>';

/*
2. Дана строка 'PHP'. Сделайте из нее строку 'php'.
*/
$str = 'PHP';
echo strtolower($str);
echo '<br>' . '<br>' . '<br>';

/*
3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.
*/
$str = 'moscow';
echo strtoupper($str{0}) . substr($str, 1);
echo '<br>' . '<br>' . '<br>';

/*
4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.
*/
$str = 'MOSCOW';
$str2 = ucfirst(strtolower($str));
echo $str2;
echo '<br>' . '<br>' . '<br>';

/*
5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.
*/
$str = 'ivanov ivan ivanovich';
echo ucwords($str);
echo '<br>' . '<br>' . '<br>';


/*
Работа с strlen, substr
6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.
*/
$str = 'я учу PHP!';
echo strlen($str);
echo '<br>' . '<br>' . '<br>';

/*
7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.
*/
$str = 'I study PHP!';
echo substr($str, 0, -10);
echo '<br>' . '<br>' . '<br>';

/*
8. Дана переменная $str, в которой хранится какой-либо текст. Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'.
В противном случае в переменную $result запишем содержимое переменной $str.*/
$str = 'Mother, I love u';
$n = 5;
$a = strlen($str);
if ($a > $n) {
    $result = substr($str, 0, -13);
    echo $result . '...';
} else {
    echo $result = $str;
}
echo '<br>' . '<br>' . '<br>';

/*
9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество символов в пароле.
*/

function password_generate($length)
{
    $password = '';
    for ($i = 0; $i < $length; $i++) {
        $password .= rand(0, 9);
    }
    
    return $password;
}

$var = password_generate(9);
echo "<pre>";
var_dump($var);
echo "</pre>";
echo '<br>' . '<br>' . '<br>';

/*
10. Создайте переменную $password. Присвойте переменной $password результат функции
из предыдущего примера. Если количество символов пароля больше 5-ти и меньше 10-ти,
то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том,
что нужно придумать другой пароль.
*/
$password = $var;
$len = strlen($var);
if ($len > 5 && $len < 10) {
    echo "Correct password.";
} else {
    echo "Create another password more than 5 chars and less than 10 ones!";
}
echo '<br>' . '<br>' . '<br>';

/* 
11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов). Подсказка: воспользуйтесь функциями strlen и substr.

xxxxxxxxxx
xxxxxxxxx
xxxxxxxx
xxxxxxx
xxxxxx

*/
$str = 'xxxxxxxxxx';
$len = strlen($str);
for ($i = $len - 1; $i > 0; $i--) {
    echo substr($str, -10, $i) . '<br>';
}
echo '<br>' . '<br>' . '<br>';

/*
Работа с str_replace
12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.
*/
echo str_replace('-', '<br>', 'Я-учу-PHP!');
echo '<br>' . '<br>' . '<br>';

/*
13. Дана строка '31.12.2013'. Замените все точки на дефисы.
*/
echo str_replace('.', '-', '31.12.2013');
echo '<br>' . '<br>' . '<br>';

/*
14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на соответсвующие картинки (<img src=''>).
*/
$str = ':):( ^-^';
$arr = array(':)', ':(', '^-^');
$arr2 = array(
    '<img src="4.jpg">', '<img src="5.jpg">', '<img src="6.jpg">');
echo str_replace($arr, $arr2, $str);
echo '<br>' . '<br>' . '<br>';

$str = ':):(^-^';
if (strstr($str, ':)')) {
    $str = str_replace(':)', '<img src="4.jpg">', $str);
}
if (strstr($str, ':(')) {
    $str = str_replace(':(', '<img src="5.jpg">', $str);
}
if (strstr($str, '^-^')) {
    $str = str_replace('^-^', '<img src="6.jpg">', $str);
}
echo $str;
echo '<br>' . '<br>' . '<br>';
/*
15. Дана переменная $str, в которой хранится строка русского текста. Напишите скрипт, который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который выполнит обратную операцию.
*/
$str = 'Я люблю кататься на велосипеде';

$bunu = array(
    'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х',
    'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л',
    'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я');
$bununla = array(
    'A', 'B', 'V', 'G', 'D', 'E', 'IO', 'ZH', 'Z', 'I', 'I', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'H',
    'C', 'CH', 'SH', 'SH', '`', 'Y', '`', 'E', 'IU', 'IA', 'a', 'b', 'v', 'g', 'd', 'e', 'io', 'zh', 'z', 'i', 'i', 'k',
    'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'h', 'c', 'ch', 'sh', 'sh', '`', 'y', '`', 'e', 'iu', 'ia');

$new = str_replace($bunu, $bununla, $str);

echo $new;
echo '<br>' . '<br>' . '<br>';

/*
Работа с explode, implode
16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
*/
$str = 'Я учу php';
var_dump(explode(' ', $str));
echo '<br>' . '<br>' . '<br>';

/*
17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.
*/
$arr = ['html', 'css', 'php', 'js'];
$str = implode(',', $arr);
var_dump($str);
echo '<br>' . '<br>' . '<br>';

/*
18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.
*/
$date = '2013-12-31';
$date2 = explode('-', $date);
echo $date2[2] . '.' . $date2[1] . '.' . $date2[0];
echo '<br>' . '<br>' . '<br>';

/*
19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.
*/
$date = '2013-12-31';
$date2 = explode('-', $date);
echo $date2[0] . '-' . $date2[1] . '-' . $date2[2];
echo '<br>' . '<br>' . '<br>';

/*
Работа с trim, ltrim, rtrim
20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.*/
$str = ' php ';
echo trim($str) . '<br>';//обрезает все пробелы
echo ltrim($str) . '<br>';//удаляет пробелы с начала строки
echo rtrim($str) . '<br>';//удаляет пробелы с конца строки
echo '<br>' . '<br>' . '<br>';

/*
Работа с strip_tags и htmlspecialchars
21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
*/

$str = 'html, <b>php</b>, js';
echo strip_tags($str);
echo '<br>' . '<br>' . '<br>';

/*
22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.
*/
$str = 'html, <b>php</b>, js';
echo htmlspecialchars($str);
echo '<br>' . '<br>' . '<br>';

/*

Работа с chr и ord
23. Узнайте код символов 'a', 'b', 'c', пробела.*/

echo ord('a') . '<br>';
echo ord('b') . '<br>';
echo ord('c') . '<br>';
echo ord(' ') . '<br>';
echo '<br>' . '<br>' . '<br>';

/*
24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33.
*/
echo chr(33);
echo '<br>' . '<br>' . '<br>';
/*
25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.
*/
$str = 'L';
echo ord($str);
echo '<br>' . '<br>' . '<br>';

/*
26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.
*/

$str = '';
$len = 10;
for ($i = 1; $i <= $len; $i++) {
    $str .= chr(rand(65, 90));
}
echo $str;
echo '<br>' . '<br>' . '<br>';
/*
Работа с substr_count, str_word_count, str_split

27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.
*/
$str = 'Mama myla ramy';
echo substr_count($str, 'm') . '<br>';
echo substr_count($str, 'a');
echo '<br>' . '<br>' . '<br>';

/*
28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.
*/

$str = 'На основе дискуссий форума PHP.SU.

Вы начинаете изучать PHP? Ознакомьтесь с вводным курсом обучения PHP.
Так же для новичков наши профессионалы собрали материалы по форуму PHP.SU и разместили это в виде Уроков PHP.

Знаете основы PHP и хотите укрепить свои познания?
Обратитесь непосредственно к разделу "Изучение PHP".
Рекомендуем также ознакомиться с принципами работы PHP с протоколом HTTP.

Вам также потребуется справочник по всем функциям PHP, полностью на русском.
Справочник по функциям PHP оснащен системой поиска функций по ключевым словам.

В PHP есть обширные средства для работы с СУБД, такими, как MySQL.
Вы можете использовать PHP для работы с большим количеством различных типов СУБД.

Наш портал содержит множество статей по PHP, MySQL, Apache, PEAR, регулярным выражениям, XML, другим веб-технологиям.
Общее число статей на данный момент составляет более 250.

У нас Вы найдете большое количество учебников и справочников по PHP, MySQL, HTML, XML, JavaScript и.т.д.

Для того, чтобы заниматься разработкой PHP скриптов и их отладкой, Вам необходим интерпретатор PHP, а также веб-сервер, например, Apache.
Если Вы будете создавать скрипты с использованием баз данных, то хорошим выбором будет MySQL.
Если Вы уже достаточно продвинутый пользователь и хотите самостоятельно установить и сконфигурировать веб-сервер, PHP и MySQL, то Вам в помощь раздел "Подготовка к работе".

Раздел "PHP скрипты" поможет Вам скачать большое количество различных скриптов PHP.

Раздел "Download" поможет Вам скачать необходимые компоненты: PHP, Apache, MySQL, PECL, PEAR, редакторы PHP кода, полезные утилиты для PHP и документацию по PHP, MySQL, PEAR и Apache.';
echo str_word_count($str) . '<br>';
echo strlen($str);
echo '<br>' . '<br>' . '<br>';

/*
29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.
*/

$let = array('a', 'e', 'i', 'o', 'u', 'y');
$str = 'There is no need to tell them who is gonne wonne.';
$arr = [];
foreach ($let as $value) {
    $arr[$value] = substr_count($str, $value);
}
echo "<pre>";
var_dump($arr);
echo "</pre>";
echo '<br>' . '<br>' . '<br>';

/*
30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
*/
$str = '1234567890';
$arr = str_split($str, 2);
echo "<pre>";
var_dump($arr);
echo "</pre>";
echo '<br>' . '<br>' . '<br>';

/*
Работа с str_repeat, strrev

31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).
*/
$str = 'kayak';
if (strrev($str)) {
    echo 'This is a palindrome!';
} else {
    echo 'This is not palindrome!';
}
echo '<br>' . '<br>' . '<br>';
/*
32. Дан массив $arr. Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон). Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.

$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
*/
error_reporting(1);
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'son', 'mir', 'son', 'rim');
for ($i = 1; $i < 10; $i++) {
    for ($j = 1; $j < $i; $j++) {
        if ($arr[$i] == strrev($arr[$j])) {
            echo $arr[$i] . '-' . $arr[$j] . '<br>';
        }
    }
}
echo '<br>' . '<br>' . '<br>';

/*
33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'. Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы, привести все к нижнему регистру).
*/
$str = 'A roza upala na lapu Azora';
$str2 = strtolower($str);
$str3 = str_replace(' ', '', $str2);
$str4 = strrev($str3);
if ($str3 == $str4) {
    echo 'Palindrome';
} else {
    echo 'Not a palindrome';
}
echo '<br>' . '<br>' . '<br>';

/*
34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

x
xx
xxx
xxxx
xxxxx
*/
for ($i = 1; $i <= 9; $i++) {
    echo str_repeat('x', $i) . '<br>';
}
echo '<br>' . '<br>' . '<br>';
/*
35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.


1
22
333
4444
55555
*/
for ($i = 1; $i <= 9; $i++) {
    echo str_repeat($i, $i) . '<br>';
}
echo '<br>' . '<br>' . '<br>';
